import numpy as np
from sklearn.datasets import load_digits
digits = load_digits()

X = digits.data.reshape((len(digits.data), -1))
k = 10

center = X[np.random.choice(X.shape[0], k, replace=False)]
objective_values = []

for j in range(100):
    labels = np.argmin(np.linalg.norm(X[:, np.newaxis, :] - center, axis=2), axis=1)
    for i in range(k):
        center[i] = np.mean(X[labels == i], axis=0)
    obj = np.sum(np.min(np.linalg.norm(X[:, np.newaxis, :] - center, axis=2), axis=1))
    objective_values.append(obj)
center = np.array([X[0]])

dist = np.linalg.norm(X - center[0], axis=1)

for i in range(1, k):
    new = X[np.argmax(dist)]
    center = np.vstack((center, new))
    dist = np.minimum(dist, np.linalg.norm(X - new, axis=1))
obj = np.max(dist)

print("The k-center objective when terminated is: ",obj)
mat = np.zeros((k, k))

for i in range(len(X)):
    km_label = np.argmin(np.linalg.norm(X[i] - center, axis=1))
    kc_label = np.argmin(np.linalg.norm(X[i] - center, axis=1))
    mat[km_label, kc_label] += 1

print("The required matrix is:")
print(mat)
